function normalKillMessages(killedPlayer) {
    let messages = [
        `According to all known laws of aviation, there is no way a bee should be able to fly. Its wings are too small to get its fat little body off the ground. The bee, of course, flies anyway because bees don't care what humans think is impossible.`,
        "skill issue, get gooder",
        "discord.gg/latite",
        "Use Latite Client for easy wins (real) (im definetly not lying)",
        "Switch to Latite Client today!",
        "how are you this bad at gaming?",
        "this u? https://youtu.be/-RsyE9Gmk7k",
        "this gaming chair goes hard",
        "I live in a low income housing environment that goes by the government name of section 8. Me and a group of my allies control certain areas of this section to run our illegitimate business.",
        "damn that was easier than I thought",
        `${killedPlayer} probably mains mineville`,
        `${killedPlayer} just took a major L`,
        `F ${killedPlayer}`,
        `${killedPlayer} delete system32 for free reach hack (im totally not lying)`,
        `gf ${killedPlayer}`,
        `damn bro yo aim is slower than my grandma ${killedPlayer}`,
        `ggs ${killedPlayer}`,
        `${killedPlayer} probably uses onix client, imagine`,
        `guys i think ${killedPlayer} is malding`,
    ];
    return messages[Math.floor(Math.random() * messages.length)];
}

function toxicKillMessages(killedPlayer) {
    // 99% of these are generated by chatgpt
    let messages = [
        `${killedPlayer}, you remind me of my incompotent grandma that I just can't keep pushing down the stairs, that mf just loves tumbling bro im tellin you`,
        `${killedPlayer}, your Minecraft prowess is as exciting as watching paint dry`,
        `${killedPlayer}, you're a perfect embodiment of "Skywars fail compilation"!`,
        `${killedPlayer}, your game sense is like a broken compass, constantly leading you astray!`,
        `${killedPlayer}, your survival instincts are as strong as a defenseless chicken!`,
        `${killedPlayer}, you're a walking tutorial on how not to play Skywars!`,
        `${killedPlayer}, even the mobs have better tactics than you!`,
        `${killedPlayer}, even the zombies have more brain cells than you!`,
        `${killedPlayer}, your reflexes are slower than a snail on tranquilizers.`,
        `${killedPlayer}, even the passive mobs laugh at your combat skills!`,
        `${killedPlayer}, did you invent a new Skywars strategy called "randomly swinging"?`,
        `${killedPlayer}, you're the living proof that armor can't protect against lack of skill.`,
        `${killedPlayer}, do you believe in ghosts? Because your chances of winning anything in life are hauntingly slim.`,
        `${killedPlayer}, if hitting air was a sport, you'd be the undefeated champion.`,
        `${killedPlayer}, you're the human embodiment of "how not to hit a moving target" tutorials.`,
    ];
    return messages[Math.floor(Math.random() * messages.length)];
}

// some kill messages and concept stolen from https://github.com/OnixClient-Scripts/OnixClient_Scripts/blob/master/Modules/HiveAutoGG.lua
// In order for the script to work properly, set your kill messages to DEFAULT.
let killedPlayer;
let glhf = true;
let gg = true;
let killmsg = true;
let toxic = false;
script.name = "Advanced AutoGG";
script.description = "Only works on The Hive Skywars!";
script.author = "Plextora";
script.version = "1.0.0";
client.showNotification(`Script ${script.name} has been loaded!`);
let autoGGModule = new Module("AdvancedAutoGG", script.name, script.description, 0);
client.getModuleManager().registerModule(autoGGModule);
client.on("receive-chat", (ev) => {
    var _a, _b;
    try {
        if (autoGGModule.isEnabled()) {
            if (isOnHive()) {
                if (ev.message.includes(`${(_a = game.getLocalPlayer()) === null || _a === void 0 ? void 0 : _a.getName()} §ckilled`) &&
                    killmsg) {
                    killedPlayer = ev.message
                        .replace(`${(_b = game.getLocalPlayer()) === null || _b === void 0 ? void 0 : _b.getName()} §ckilled `, "")
                        .replace(/§[0-9A-FK-OR]|»|§/gi, "") // https://regex101.com/r/iLxPKe/2
                        .substring(1); // removes unnecessary space in beginning of player name
                    if (toxic) {
                        game.sendChatMessage(toxicKillMessages(killedPlayer));
                    }
                    else if (toxic === false) {
                        game.sendChatMessage(normalKillMessages(killedPlayer));
                    }
                }
                else if (ev.message.includes("You are on the ") && glhf) {
                    game.sendChatMessage("glhf!");
                }
                else if (ev.message.includes("Game OVER!") && gg) {
                    game.sendChatMessage("GG!");
                }
            }
        }
    }
    catch (err) {
        script.log(`§cAdvanced AutoGG Error: ${err}`);
    } // shitty way of handling runtime errors until jay implements that stuff
});
client.on("send-chat", (ev) => {
    if (autoGGModule.isEnabled()) {
        cmdHandler(ev);
    }
});
function isOnHive() {
    if (game.getConnectedFeaturedServer() === "The Hive") {
        return true;
    }
    else {
        return false;
    }
}
function cmdHandler(ev) {
    if (ev.message.startsWith("-")) {
        ev.cancel = true;
        switch (ev.message) {
            case "-help":
                script.log("§eAdvanced AutoGG commands:§r\n§6-help: Shows this chat message.\n-gg: Toggles the AutoGG option.\n-glhf: Toggles the AutoGLHF option.\n-killmsg: Toggles the custom kill message option.\n-toxic: Toggles the usage of toxic kill messages.");
                break;
            case "-gg":
                gg = !gg;
                if (gg === true) {
                    script.log("[§eAdvanced AutoGG§r] §aAutoGG is on!");
                }
                if (gg === false) {
                    script.log("[§eAdvanced AutoGG§r] §cAutoGG is off!");
                }
                break;
            case "-glhf":
                glhf = !glhf;
                if (glhf === true) {
                    script.log("[§eAdvanced AutoGG§r] §aAutoGLHF is on!");
                }
                if (glhf === false) {
                    script.log("[§eAdvanced AutoGG§r] §cAutoGLHF is off!");
                }
                break;
            case "-killmsg":
                killmsg = !killmsg;
                if (killmsg === true) {
                    script.log("[§eAdvanced AutoGG§r] §aCustom Kill Messages are on!");
                }
                if (killmsg === false) {
                    script.log("[§eAdvanced AutoGG§r] §cCustom Kill Messages are off!");
                }
                break;
            case "-toxic":
                toxic = !toxic;
                if (toxic === true) {
                    script.log("[§eAdvanced AutoGG§r] §aToxic Kill Messages are on!");
                }
                if (toxic === false) {
                    script.log("[§eAdvanced AutoGG§r] §cToxic Kill Messages are off!");
                }
                break;
            default:
                script.log('[§eAdvanced AutoGG§r] §cInvalid command. Run "-help" for all Advanced AutoGG commands.');
                break;
        } // pretty messy, might clean up later.
    }
}
